       title: "Stateless Packet Filtering Profile"
      module: "https://oasis-open.org/openc2/oc2slpf/v1.1"
 description: "Stateless Packet Filtering (SLPF) data definitions"
     imports: {"ls": "https://oasis-open.org/openc2/oc2ls-types/v1.1"}
     exports: ["OpenC2-Command", "OpenC2-Response"]

OpenC2-Command = Record                                // The Command defines an Action to be performed on a Target
   1 action           Action                           // The task or activity to be performed (i.e., the 'verb').
   2 target           Target                           // The object of the Action. The Action is performed on the Target.
   3 args             Args optional                    // Additional information that applies to the Command.
   4 actuator         Actuator optional                // The subject of the Action. The Actuator executes the Action on the Target.
   5 command_id       ls:Command-ID optional           // An identifier of this Command.

OpenC2-Response = Record
   1 status           ls:Status-Code                   // An integer status code.
   2 status_text      String optional                  // A free-form human-readable description of the Response status.
   3 results          Results optional                 // Map of key:value pairs that contain additional results based on the invoking Command.

Action = Enumerated
   3 query                                             // Initiate a request for information.
   6 deny                                              // Prevent a certain event or action from completion, such as preventing a flow from reaching a destination or preventing access.
   8 allow                                             // Permit access to or execution of a Target.
  16 update                                            // Instruct a component to retrieve, install, process, and operate in accordance with a software update, reconfiguration, or other update.
  20 delete                                            // Remove an entity (e.g., data, files, flows).

Target = Choice
   7 domain_name      ls:Domain-Name                   // A network domain name.
   9 features         ls:Features                      // A set of items used with the query Action to determine an Actuator's capabilities.
  10 file             ls:File                          // Properties of a file.
  13 ipv4_net         ls:IPv4-Net                      // An IPv4 address range including CIDR prefix length.
  14 ipv6_net         ls:IPv6-Net                      // An IPv6 address range including prefix length.
  15 ipv4_connection  ls:IPv4-Connection               // A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol.
  16 ipv6_connection  ls:IPv6-Connection               // A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol.
1024 slpf/            AP-Target                        // Profile-defined targets

Args = Map{1..*}
   1 start_time       ls:Date-Time optional            // The specific date/time to initiate the Command
   2 stop_time        ls:Date-Time optional            // The specific date/time to terminate the Command
   3 duration         ls:Duration optional             // The length of time for an Command to be in effect
   4 response_requested ls:Response-Type optional      // The type of Response required for the Command: none, ack, status, complete
1024 slpf/            AP-Args optional                 // Profile-defined command arguments

Actuator = Choice                                      // Profile template: add new actuators, delete all that do not apply to this device
1024 slpf/            AP-Specifiers                    // Actuator specifiers defined in the Stateless Packet Filtering profile

Results = Map{1..*}                                    // Response Results
   1 versions         ls:Version unique [0..10]        // List of OpenC2 language versions supported by this Actuator
   2 profiles         ls:FieldName unique [0..*]       // List of profiles supported by this Actuator
   3 pairs            Action-Targets optional          // List of targets applicable to each supported Action
   4 rate_limit       Number{0.0..*} optional          // Maximum number of requests per minute supported by design or policy
   5 args             Enumerated(Enum[Args]) [0..*]    // List of supported Command Arguments
1024 slpf/            AP-Results optional              // Profile-defined response results

Action-Targets = Map                                   // Map of each action supported by this actuator to the list of targets applicable to that action.
   3 query            Target-query unique [1..*]
   6 deny             Target-allow-deny unique [1..*]
   8 allow            Target-allow-deny unique [1..*]
  16 update           Target-update unique [1..*]
  20 delete           Target-delete unique [1..*]

Target-query = Enumerated                              // All targets supported by this actuator's query command
   1 features
   2 slpf/rule_number

Target-allow-deny = Enumerated                         // All targets supported by this actuator's deny command
   1 ipv4_connection
   2 ipv6_connection
   3 ipv4_net
   4 ipv6_net
   5 domain_name

Target-update = Enumerated
   1 file

Target-delete = Enumerated
   1 slpf/rule_number

AP-Target = Choice                                     // Profile-defined targets
   1 rule_number      Rule-ID                          // Immutable identifier assigned when a rule is created. Identifies a rule to be deleted.

AP-Args = Map{1..*}                                    // Profile-defined command arguments
   1 drop_process     Drop-Process optional            // Specifies how to handle denied packets
   2 persistent       Boolean optional                 // Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart
   3 direction        Direction optional               // Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to ingress packets
   4 insert_rule      Rule-ID optional                 // Specifies the identifier of the rule within a list, typically used in a top-down rule list
   5 logged           Boolean optional                 // Specifies if a log entry should be recorded as traffic matches the rule. The manner and mechanism for recording these entries is implementation specific and not defined by this specification.

Drop-Process = Enumerated
   1 none                                              // Drop the packet and do not send a notification to the source of the packet
   2 reject                                            // Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet
   3 false_ack                                         // Drop the traffic and send a false acknowledgment

Direction = Enumerated
   1 both                                              // Apply rules to all traffic
   2 ingress                                           // Apply rules to incoming traffic only
   3 egress                                            // Apply rules to outgoing traffic only

AP-Specifiers = Map                                    // Profile-defined actuator specifiers
   1 hostname         String optional                  // [RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality
   2 named_group      String optional                  // User defined collection of devices with SLPF functionality
   3 asset_id         String optional                  // Unique identifier for a particular SLPF
   4 asset_tuple      String optional                  // Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings

AP-Results = Map{1..*}                                 // Profile-defined response results
   1 rule_number      Rule-ID optional                 // Rule identifier returned from allow or deny Command

Rule-ID = Integer                                      // Access rule identifier
